# This workflow will install Python dependencies, run tests, lint (black), applies semantic releases and pushed to PyPi with a single version of Python

name: OOPNET build

on:
  workflow_dispatch:
  push:
    branches: 
      - main
  pull_request:
    branches: 
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Checkout linux_epanet_2.2
      uses: actions/checkout@v2
      with:
        token: ${{ secrets.OOPNET_TOKEN }}
        repository: oopnet/linux_epanet_2.2
        path: linux_epanet_2.2
    - name: Setup EPANET
      run: ./linux_epanet_2.2/setup.sh
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: "3.9"
#     - name: Install dependencies
#       run: |
#         python -m pip install --upgrade pip
#         pip install pytest scoop
#         if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi
    - name: Black Code Formatter
      uses: lgeiger/black-action@v1.0.1
      with:
        args: "oopnet"
#     - name: Check out my other private repo
#       uses: actions/checkout@master
#       with:
#         repository: oopnet/linux_epanet_2.2
#         token: ${{ secrets.GITHUB_TOKEN }}
#     - name: Test with pytest
#       run: |
#         pytest
    - name: Python Semantic Release
      uses: relekang/python-semantic-release@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        PyPI_token: ${{ secrets.PyPI_TOKEN }}
    - name: Check for modified files
      id: git-check
      run: echo ::set-output name=modified::$(if git diff-index --quiet HEAD --; then echo "false"; else echo "true"; fi)
    - name: Push changes
      if: steps.git-check.outputs.modified == 'true'
      run: |
        git config --global user.name 'OOPNET bot'
        git config --global user.email 'oopnet-bot@noreply.github.com'
        git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}
        git commit -am "Automated changes"
        git push
